/*
‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïî‚ïê‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù
Note: Terimakasih Telah Membeli Script Ini Semoga Bermanfaat
Copyright ¬© 2024 - 2025 Crystalia
Íí∞‚öòÍí± Admin Contact Íí±‚ü°
ìÖØ ùôâÕ¢ùôñùôßùô™ùôÆùôñ ùôÑÕ¢ùôØùô™ùô¢ùôû
https://linkbio.co/naruyaizumi
ìÖØ ùôëÕ¢ùô°ùôûùô£ùôö
WhatsApp: wa.me/6285770019354
ìÖØ ùë∫Õ¢ùëøùíÅùíèùíäùíàùíâùíïùíéùíÇùíìùíÜ
WhatsApp: wa.me/6281398961382
*/

let handler = async (m, { args }) => {
let user = global.db.data.users[m.sender]
let emot = v => global.rpg.emoticon(v)
let input = (args[0] || '').toLowerCase()
let jumlah = Math.min(Math.max(parseInt(args[1]) || 1, 1), Number.MAX_SAFE_INTEGER)
let maxEnergy = 50 + user.level * 5
let maxHealth = 100 + user.level * 10
if (!input) {
let list = makanan.filter(v => user[v] > 0).map(v => `‚Ä¢ ${emot(v)} ${capitalize(v)}`).join('\n')
return m.reply(user ? `üç± *Kamu mau makan apa, sayang?*\n\n${list}` : `üç≥ *Belum punya makanan~ masak dulu pakai .cook*`)
}
if (input == 'all') {
let log = []
for (let food of makanan) {
while (user[food] > 0 && user.energy < maxEnergy) {
let { energy, health } = makananEfek[food]
user[food]--
user.energy = Math.min(user.energy + energy, maxEnergy)
user.health = Math.min(user.health + health, maxHealth)
log.push(`*üçΩÔ∏è ${emot(food)} ${capitalize(food)} ‚ûú  ‚ö°+${energy} ‚ù§Ô∏è+${health}*`)
}
}
return log.length ? m.reply(`*Kamu makan sampai kenyang!*\n\n${log.join('\n')}`) : m.reply('ü•∫ *Energi kamu sudah penuh atau tidak ada makanan.*')
}
if (!makanan.includes(input)) return m.reply('ü•∫ *Makanan tidak dikenal~*')
if (user[input] < 1) return m.reply(`üò¢ *Kamu tidak punya ${capitalize(input)}!*`)
if (user.energy >= maxEnergy) return m.reply('‚ö° *Energi kamu sudah penuh, sayang~*')
let eaten = 0
for (let i = 0; i < jumlah; i++) {
if (user[input] < 1 || user.energy >= maxEnergy) break
let { energy, health } = makananEfek[input]
user[input]--
user.energy = Math.min(user.energy + energy, maxEnergy)
user.health = Math.min(user.health + health, maxHealth)
eaten++
}
if (!eaten) return m.reply('‚ö° *Energi sudah penuh atau makanan habis!*')
m.reply(`üçΩÔ∏è *Kamu memakan ${eaten} ${capitalize(input)}*\n‚ö° *Energi sekarang: ${user.energy} / ${maxEnergy}*\n‚ù§Ô∏è *Darah sekarang: ${user.health} / ${maxHealth}*`)
}

handler.help = ['eat']
handler.tags = ['rpg']
handler.command = /^(makan|eat)$/i
handler.register = true
handler.group = true
handler.rpg = true

export default handler

const makanan = [
"steak", "ayam_goreng", "ribs", "roti", "udang_goreng", "bacon",
"pisang", "anggur", "mangga", "jeruk", "apel"
]

const makananEfek = {
pisang: { energy: 20, health: 5 },
anggur: { energy: 20, health: 5 },
mangga: { energy: 20, health: 5 },
jeruk: { energy: 20, health: 5 },
apel: { energy: 20, health: 5 },
steak: { energy: 40, health: 10 },
ayam_goreng: { energy: 40, health: 10 },
ribs: { energy: 40, health: 10 },
roti: { energy: 30, health: 8 },
udang_goreng: { energy: 35, health: 9 },
bacon: { energy: 30, health: 8 }
}

function capitalize(txt) {
return txt.charAt(0).toUpperCase() + txt.slice(1)
}