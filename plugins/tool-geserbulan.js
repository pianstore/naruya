/*
‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïî‚ïê‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë
‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù
Note: Terimakasih Telah Membeli Script Ini Semoga Bermanfaat
Copyright ¬© 2024 - 2025 Crystalia
Íí∞‚öòÍí± Admin Contact Íí±‚ü°
ìÖØ ùôâÕ¢ùôñùôßùô™ùôÆùôñ ùôÑÕ¢ùôØùô™ùô¢ùôû
https://linkbio.co/naruyaizumi
ìÖØ ùôëÕ¢ùô°ùôûùô£ùôö
WhatsApp: wa.me/6285770019354
ìÖØ ùë∫Õ¢ùëøùíÅùíèùíäùíàùíâùíïùíéùíÇùíìùíÜ
WhatsApp: wa.me/6281398961382
*/

let handler = async (m, { conn, text }) => {
if (!text) return m.reply(`üç∞ *Masukkan nilai pergeseran bulan*\n*(dalam meter, + untuk menjauh/- untuk mendekat)*\n\n*Contoh: .geserbulan 1000*`)
const shiftValue = parseFloat(text)
if (isNaN(shiftValue)) return m.reply('üç≠ *Input harus berupa angka!*\n*Contoh: `.geserbulan -500` (mendekat 500m)*')
const {
newDistance,
orbitalPeriod,
orbitStability,
gravityChange,
tidalEffects,
earthRotation,
warnings
} = lunarShiftSimulation(shiftValue)

let resultMessage = `
üç° *SIMULASI PERGESERAN BULAN* üç°
‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨
üç¨ *Parameter Input:*
üçì *Pergeseran: ${Math.abs(shiftValue).toLocaleString()} meter*
üç™ *Arah: ${shiftValue > 0 ? 'Menjauh dari Bumi' : 'Mendekati Bumi'}*

üç© *Dampak Orbital:*
üç´ *${newDistance}*
üç∞ *${orbitalPeriod}*
üçÆ *${orbitStability}*

üßÅ *Perubahan Fisik:*
üç¶ *${gravityChange}*
ü•ß *${tidalEffects}*
üçØ *${earthRotation}*
`.trim()
if (warnings.length > 0) {
resultMessage += `\n\nüç® *PERINGATAN KRITIS:* üç®\n` +
warnings.map(w => `üç¨ ${w}`).join('\n')
}
await m.reply(resultMessage)
}

function lunarShiftSimulation(shiftMeters) {
const CURRENT_DISTANCE_KM = 384400
const HILL_SPHERE_RATIO = 0.5
const CRITICAL_DISTANCE_KM = 10000

const shiftKm = shiftMeters / 1000
const newDistanceKm = CURRENT_DISTANCE_KM + shiftKm
const newDistanceM = newDistanceKm * 1000

const newOrbitDays = 27.322 * Math.pow(newDistanceKm / CURRENT_DISTANCE_KM, 1.5)
const gravityChangePercent = Math.pow(CURRENT_DISTANCE_KM / newDistanceKm, 2) * 100 - 100
const tidalFactor = Math.pow(CURRENT_DISTANCE_KM / newDistanceKm, 3)
const dayLengthChange = 24 * (newDistanceKm / CURRENT_DISTANCE_KM)

let stabilityStatus
if (Math.abs(shiftKm) < 1) {
stabilityStatus = 'üçè *Stabil (Perubahan minor)*'
} else if (newDistanceKm > CRITICAL_DISTANCE_KM * 5) {
stabilityStatus = 'üçí *Tidak Stabil! (Risiko lepas orbit)*'
} else {
stabilityStatus = 'üçé *Stabil Bersyarat*'
}
const warnings = []
if (newDistanceKm < CRITICAL_DISTANCE_KM) {
warnings.push('*Bulan terlalu dekat! Ancaman tsunami global*')
}
if (newDistanceKm > CURRENT_DISTANCE_KM * 2) {
warnings.push('*Bulan terlalu jauh! Musim akan kacau*')
}
if (Math.abs(shiftMeters) > 1000000) {
warnings.push('*Perubahan drastis! Sistem Bumi-Bulan dalam bahaya*')
}

return {
newDistance: `üç™ *Jarak Baru: ${newDistanceKm.toLocaleString()} km*`,
orbitalPeriod: `üßÅ *Periode Orbit: ${newOrbitDays.toFixed(3)} hari*`,
orbitStability: `üç¨ *Stabilitas: ${stabilityStatus}*`,
gravityChange: `üç´ *Perubahan Gravitasi: ${gravityChangePercent.toFixed(2)}%*`,
tidalEffects: `üç© *Efek Pasang Surut: ${tidalFactor.toFixed(2)}x ${tidalFactor > 1 ? 'lebih kuat' : 'lebih lemah'}*`,
earthRotation: `üç∞ *Durasi Hari: ${dayLengthChange.toFixed(3)} jam*`,
warnings
}
}

handler.help = ['geserbulan']
handler.tags = ['tool']
handler.command = /^(geserbulan|moonshift|simulasibulan)$/i
handler.limit = true
handler.register = true

export default handler